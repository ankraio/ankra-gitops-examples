loki:
  serviceName: loki.loki.svc.cluster.local
  servicePort: 3100
  serviceScheme: http
  servicePath: /api/prom/push

config:
  port: 2020
  tenantID: "1"
  batchWait: 1
  batchSize: 1048576
  loglevel: warn
  lineFormat: json
  k8sLoggingExclude: "Off"
  k8sLoggingParser: "Off"
  memBufLimit: "5MB"
  bufChunkSize: "32k"
  bufMaxSize: "32k"
  removeKeys:
    - kubernetes
    - stream
  autoKubernetesLabels: false
  labels: '{job="fluent-bit"}'
  labelMap:
    kubernetes:
      namespace_name: namespace
      labels:
        app: app
        release: release
      host: node
      container_name: container
      pod_name: instance
    stream: stream

hostAliases: []
affinity: {}
annotations: {}
automountServiceAccountToken: true
deploymentStrategy: RollingUpdate

image:
  repository: grafana/fluent-bit-plugin-loki
  tag: 3.1.2-arm64
  pullPolicy: IfNotPresent

nameOverride: fluent-bit-loki

nodeSelector: {}
podLabels: {}
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "2020"
  prometheus.io/path: /api/v1/metrics/prometheus

rbac:
  create: true
  pspEnabled: true

resources:
  limits:
    memory: 100Mi
  requests:
    cpu: 100m
    memory: 100Mi

serviceAccount:
  create: true
  name: ""

podSecurityContext: {}
securityContext: {}

tolerations:
  - key: node-role.kubernetes.io/master
    effect: NoSchedule

volumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers

volumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true

serviceMonitor:
  enabled: false
  interval: ""
  additionalLabels: {}
  annotations: {}
